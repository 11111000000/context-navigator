* Emacs Context Navigator

Context Navigator is a lightweight, project-aware context manager and sidebar
for Emacs. It helps you practice “context engineering”: instead of keeping your
task state, files, selections and notes in your head, you externalize context
into clear, reusable groups tied to your projects. That reduces mental load and
frees energy for deep, creative work.

#+caption: Items view — your current context (enabled files, buffers, selections)
#+attr_org: :width 820
[[./context-navigator-items.png]]

Instead of the usual “open a few buffers, hope you remember why”, Navigator lets
you define explicit context groups:
- “research”, “bug-123”, “release-notes” — anything you want
- add files, buffers, or regions/selections to a group
- suspend/resume groups, or instantly switch context
- Navigator persists state per-project (or globally) and can auto-load on project switch

#+caption: Groups view — switch, create, rename, duplicate, delete
#+attr_org: :width 820
[[./context-navigator-groups.png]]

Navigator works great with gptel: it can push enabled items (one-way)
into gptel, so your chat sessions are always grounded in context, yet you can return to your saved groups anytime.
Note: Navigator never imports from gptel; it only pushes when you ask it to (or when the push toggle is enabled).

Status: 1.1.4 — async per-group persistence with spinner & progress, i18n, improved sidebar (indicators, openable counter, icons/text controls), Dired-aware project auto-switch, “Add by mask”, “Add from text”.

* Requirements
- Emacs 29.1+ (recommended 30.1+)
- transient 0.3.0+ (for the menu)
- gptel 0.8.0+ (optional)
- Optional: project.el or projectile (project detection)
- Optional: all-the-icons (sidebar icons)

* Installation

Not on MELPA yet. Use straight.el/git or local checkout.

*/ Local checkout + use-package (recommended)
#+begin_src emacs-lisp
(add-to-list 'load-path "/path/to/context-navigator")

(use-package context-navigator
  :commands (context-navigator-start
             context-navigator-mode
             context-navigator-sidebar-open)
  :init
  (setq context-navigator-autoload t
        context-navigator-autosave t
        context-navigator-global-key "C-c n") ;; recommended global key
  :config
  (context-navigator-mode 1))
#+end_src

*/ Installation via straight.el (from GitHub)
#+begin_src emacs-lisp
(use-package context-navigator
  :straight (context-navigator
             :type git
             :host github
             :repo "11111000000/context-navigator")
  :init
  (setq context-navigator-autoload t
        context-navigator-autosave t
        context-navigator-global-key "C-c n")
  :config
  (context-navigator-mode 1))
#+end_src

*/ Notes
- If you don’t want a global binding, leave context-navigator-global-key as nil (the default).
- To invoke the menu without a keybinding, use M-x context-navigator-transient.
- If you enable icons, install fonts with M-x all-the-icons-install-fonts (one-time).

* Quick Start
- Enable mode: M-x context-navigator-mode or (context-navigator-mode 1)
- Press C-c n (if you set it), then:
  - n — toggle sidebar
  - a — Add (universal) from wherever you are
  - f — Add files by glob mask
  - F — Add files from arbitrary text (extracts paths)
- Or: M-x context-navigator-start to open the sidebar immediately
- Press ? in the sidebar for localized help

#+caption: Transient menu (C-c n)
#+attr_org: :width 760
[[./context-navigator-transient.png]]

By default Navigator does not affect gptel.
- Toggle [→gptel: on] to auto-push (one-way) when the model changes.
- Use footer actions [Open buffers], [Push now], and [Clear gptel] for manual control.
- Indicators (green/gray) show if an item is present in gptel.

* Sidebar at a Glance

- Items view header shows “[<project>: <group>]” and compact controls.
- Groups view header shows “[<project>]” and the list of groups.
- Header toggles (clickable / TAB-reachable):
  - [→]  push→gptel on/off
  - [A]  auto-project switching on/off
- Footer actions:
  - [O]  Open buffers (shows a dynamic count; remote-aware)
  - [⇪] Push now (disabled when auto-push is ON)
  - [✖] Clear group (remove all items from current group)
  - [∅] Clear gptel (only gptel, model unaffected)

#+caption: Compact controls (icons style) — header toggles and footer actions with indicators
#+attr_org: :width 820
[[./context-navigator-controls-icons.png]]

* “Universal Add” (a)

“Add (universal)” chooses what to add based on where you call it:
- Dired
  - Marked files → added directly (filtering by size)
  - Marked directories → recursive collection with a preview + confirmation
  - Skips non-regular files and symlinks; warns for remote/TRAMP
- Active region → selection (file:beg-end)
- File-backed buffer without region → file
- Other buffers → buffer item

When push→gptel is ON, the current model is applied to gptel after the add.

* Add files by mask (f)

- Examples:
  - /.el             — all .el files in the project root
  - */*.org         — all .org files across the project tree
  - ./*.el           — all .el in the current buffer’s directory
  - ./*/*.el        — all .el under the current directory recursively
  - test/test-*.el   — files under <project-root>/test/ starting with test-
  - ~/src/*/*.c     — all .c under ~/src recursively
  - ../*.md          — all .md in the parent directory

Notes:
- Only one mask at a time. Mixing mask and explicit names/paths is not allowed.
- Dotfiles are hidden by default; include them by putting a leading dot in a component (e.g., .*.el).
- TRAMP expansion is disabled by default for masks.
- Base directory is auto-detected:
  - absolute masks → absolute base
  - masks starting with ./ or ../ → current buffer’s directory
  - other masks → project root (when available), otherwise default-directory

Large matches will show a quick preview with total size and skipped files.

* Add files from text (F)

Extracts path-like tokens from arbitrary text (region or whole buffer) and resolves them to files:
- Accepts absolute paths, relative paths, and recognizable basenames
- Integrates with project index (uses project.el or git, with TTL cache) for fast resolution
- Skips non-regular files and symlinks; respects max file size
- Safety checks:
  - ambiguous matches abort with a short summary
  - unresolved tokens are reported
  - too many matches trigger a preview/confirmation
  - remote files require confirmation

* Key bindings

_Global (context-navigator-mode):_
- C-c n   Open transient menu (context-navigator-transient)
  - In menu:
    - n  toggle sidebar
    - p  switch Navigator to current buffer’s project
    - a  Add (universal) — current region/file/buffer or Dired selection
    - f  Add files from minibuffer (mask)
    - F  Add files from text (region/buffer)
    - g  groups list
    - s  save context
    - l  load context
    - u  unload context
    - x  toggle push→gptel
    - T  toggle auto-project
    - P  push now
    - C  clear gptel

_Sidebar (context-navigator-sidebar-mode):_
- RET / l        Visit/activate item or open group
- SPC            Preview item (other window)
- n / p / j / k  Next/previous item (or group line)
- t              Toggle gptel membership for item at point
- d              Delete item (items view) or group (groups view)
- g              Refresh (items or groups, depending on view)
- h              Toggle items/groups (go “up”)
- a / r / c      Add / Rename / Duplicate group (groups view)
- x / T          Toggle push→gptel / auto-project
- P / C          Push now / Clear gptel
- E              Clear current group (items view)
- o              Open all context buffers in background
- TAB / S-TAB    Jump between toggles, actions, items, and groups
- q              Quit sidebar
- ?              Help (localized, column-formatted)

Remapped defaults (quality-of-life):
- delete-other-windows first closes sidebar windows to preserve your layout.
- Optional: window balancing is protected while the sidebar is visible (see config).

#+caption: Sidebar help (localized, column-formatted)
#+attr_org: :width 820
[[./context-navigator-help.png]]

* Typical Workflows

- Project-centric groups: research, bug fixes, refactoring; switch context in one command.
- Auto-project switching: follows you across projects and Dired buffers.
- Task tracking: mirror tickets as groups, toggle enabled files, push on demand.
- LLM sessions: add buffer regions, whole buffers, or Dired selections; auto-push for “live” sessions.
- Manual vs auto gptel update: header/footer toggles + push/clear when you want it.

* Features

- Groups and Items
  - Context groups per project (or globally)
  - Add files, buffers, regions/selections
  - Enable/disable items
  - Default group auto-initialization on first use (configurable)
- Sidebar UI
  - Optional icons (all-the-icons)
  - Compact header toggles (push→gptel, auto-project)
  - Footer actions: [Open buffers], [Push now], [Clear group], [Clear gptel]
  - Openable buffers counter with soft-cap; remote-aware counting modes
  - Mouse/TAB navigation-friendly
  - Localized help screen
- GPTel integration
  - One-way “push” (never imports from gptel)
  - On push: reset gptel and add all enabled items
  - Binary membership indicators next to items (present/absent)
- Persistence
  - v3 per-group s-exp files: <project>/.context/<group>.el (or ~/.context/<group>.el)
  - state.el tracks the current group and display names
  - Async load with batching, spinner and progress
- Universal Add
  - Dired: recursive with preview & confirmation when directories present
  - Skips non-regular files and files above size limit (configurable)
  - File/region/buffer auto-detection
- Project switching
  - Uses project.el or projectile (optional)
  - Auto-switch throttle (configurable)
  - Includes Dired buffers

* Fancy UI example (icons, indicators, paths, compact controls)

#+begin_src emacs-lisp
;; You need all-the-icons installed for icon styles:
;; M-x all-the-icons-install-fonts (once)
(use-package context-navigator
  ;; :straight (context-navigator
  ;;            :type git
  ;;            :host github
  ;;            :repo "11111000000/context-navigator")

  ;; Use :custom instead of setq — values are applied via customize-set-variable.
  :custom
  ;; Basics
  (context-navigator-global-key "C-c n")           ;; recommended transient key
  (context-navigator-autoload t)                   ;; load pieces on first use
  (context-navigator-autosave t)                   ;; auto-save contexts
  (context-navigator-sidebar-width 36)             ;; sidebar width

  ;; Sidebar look & feel
  (context-navigator-controls-style 'icons)        ;; compact header/footer controls
  (context-navigator-highlight-active-group t)     ;; highlight current group
  (context-navigator-auto-open-groups-on-error t)  ;; show groups if load failed
  (context-navigator-gptel-indicator-poll-interval 0.8) ;; keep indicators fresh

  ;; Render options
  (context-navigator-render-indicator-style 'icons) ;; tiny lamps via all-the-icons
  (context-navigator-render-show-path t)            ;; right-aligned paths
  (context-navigator-render-truncate-name 64)       ;; truncate long names

  ;; Icons provider
  (context-navigator-enable-icons t)
  (context-navigator-icons-disable-on-remote t)

  ;; Footer “open buffers” counter
  (context-navigator-openable-count-ttl 0.3)       ;; cache TTL
  (context-navigator-openable-soft-cap 100)        ;; soft cap
  (context-navigator-openable-remote-mode 'lazy)   ;; 'off | 'lazy | 'strict

  ;; Project switching and persistence
  (context-navigator-context-switch-interval 0.7)  ;; throttle
  (context-navigator-create-default-group-file t)  ;; auto-create default group

  ;; Universal add (Dired recursion) size limit
  (context-navigator-max-file-size (* 2 1024 1024)) ;; 2MB

  ;; Internationalization
  (context-navigator-language 'auto)               ;; en/ru/fr/de/es or auto

  ;; Keep your layout stable with the sidebar open
  (context-navigator-protect-sidebar-windows t)

  :config
  (context-navigator-mode 1))
#+end_src

Tip: With controls-style=icons and indicator-style=icons, items show tiny lamps indicating presence in gptel (green/gray). TAB navigates between toggles, actions, items, and groups.

* Recommended Configuration
- Set a global key you like (optional; default: none):
  #+begin_src emacs-lisp
  (setq context-navigator-global-key "C-c n")
  #+end_src
- If another package already binds your chosen key, pick a different one (e.g., "C-c C-n").
- Enable icons for the sidebar (optional) and install fonts once:
  #+begin_src emacs-lisp
  (setq context-navigator-enable-icons t)
  ;; M-x all-the-icons-install-fonts
  #+end_src

* Configuration reference (selected defcustoms)

Core:
- context-navigator-global-key (nil | string)
- context-navigator-autoload (t)
- context-navigator-autosave (t)
- context-navigator-autosave-debounce (0.5)
- context-navigator-sidebar-width (integer)
- context-navigator-context-switch-interval (0.7)
- context-navigator-context-load-batch-size (64)
- context-navigator-create-default-group-file (t)
- context-navigator-protect-sidebar-windows (t)
- context-navigator-default-push-to-gptel (t)
- context-navigator-default-auto-project-switch (t)

Sidebar:
- context-navigator-controls-style ('auto | 'icons | 'text)
- context-navigator-auto-open-groups-on-error (t)
- context-navigator-highlight-active-group (t)
- context-navigator-gptel-indicator-poll-interval (1.0)
- context-navigator-openable-count-ttl (0.3)
- context-navigator-openable-soft-cap (100)
- context-navigator-openable-remote-mode ('lazy | 'strict | 'off)
- context-navigator-sidebar-spinner-frames (list of strings)
- context-navigator-sidebar-spinner-interval (0.1)

Render:
- context-navigator-render-indicator-style ('auto | 'icons | 'text | 'off)
- context-navigator-render-show-path (nil)
- context-navigator-render-truncate-name (64)

Icons:
- context-navigator-enable-icons (t)
- context-navigator-icons-disable-on-remote (t)

Add (universal / Dired recursion):
- context-navigator-max-file-size (bytes; default 2MB)

Add from text / names:
- context-navigator-path-add-limit (50)
- context-navigator-path-add-index-cache-ttl (30.0)
- context-navigator-path-add-case-sensitive ('auto | 'on | 'off)
- context-navigator-path-add-ignore-gitignored (t)
- context-navigator-path-add-exclude-dotdirs (t)
- context-navigator-path-add-fallback-exclude (list)

Masks/globs:
- context-navigator-mask-include-dotfiles (nil)
- context-navigator-mask-enable-remote (nil)
- context-navigator-mask-globstar (t)

i18n:
- context-navigator-language ('auto | 'en | 'ru | 'fr | 'de | 'es)

Persistence (format constants):
- context-navigator-persist-version (3)

See variable docstrings for full details.

* How it decides “what to open” (footer [Open buffers])

The counter shows how many file-backed items (file/buffer/selection) can be opened
quietly in the background. Remote-aware modes:
- off    — ignore remote files
- lazy   — do not stat files over TRAMP; consider “openable” if no live buffer
- strict — verify existence with file-exists-p even on TRAMP (can be slow)

A soft cap avoids heavy operations and shows “N+” once exceeded.

* Project Detection

Navigator reacts to buffers that most often represent your active context:
- file-backed buffers
- gptel buffers (derived modes)
- Dired buffers inside projects

Switching is throttled (configurable) and debounced.

* Troubleshooting

- No menu or keys?
  Ensure context-navigator-mode is enabled, and set context-navigator-global-key if you want a global key.
- Wrong key / conflicts?
  Change context-navigator-global-key to another binding, e.g., "C-c C-n".
- Sidebar not showing?
  Try M-x context-navigator-start or M-x context-navigator-sidebar-open.
- Icons not showing?
  Install all-the-icons and run M-x all-the-icons-install-fonts (then restart Emacs).
- gptel missing?
  Navigator works fine without it. Push actions will be no-ops with a helpful message.
- Loading errors?
  If a group file is unreadable, the sidebar can auto-open the groups list (toggle in config). Press h to show groups.

* License
MIT — see LICENSE.

* Acknowledgements
- gptel for the AI interface
- Emacs community for project.el, all-the-icons, and inspiration
